{
    "$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
    "name": "encantis",
    "patterns": [
        {
            "include": "#comments"
        },
        {
            "include": "#keywords"
        },
        {
            "include": "#operators"
        },
        {
            "include": "#strings"
        },
        {
            "include": "#constants"
        },
        {
            "include": "#variables"
        }
    ],
    "repository": {
        "comments": {
            "patterns": [
                {
                    "name": "comment.line.double-dash.encantis",
                    "begin": "--",
                    "end": "\n"
                },
                {
                    "name": "comment.block.encantis",
                    "begin": "-<",
                    "end": ">-"
                }
            ]
        },
        "operators": {
            "patterns": [
                {
                    "name": "keyword.operator.arrow.encantis",
                    "match": "\\->|=>"
                },
                {
                    "name": "keyword.operator.logical.encantis",
                    "match": "&&|\\|\\||\\?\\?"
                },
                {
                    "name": "keyword.operator.assignment.augmented.encantis",
                    "match": "<<<=|>>>=|%=|&=|\\*=|\\+=|-=|/=|\\^=|\\|=|<<=|>>=|\\|\\|=|\\?\\?="
                },
                {
                    "name": "keyword.operator.bitwise.encantis",
                    "match": "<<<|>>>|<<|>>|&|\\^|\\|"
                },
                {
                    "name": "keyword.operator.comparison.encantis",
                    "match": "<=|<|>=|>"
                },
                {
                    "name": "keyword.operator.comparison.encantis",
                    "match": "==|!="
                },
                {
                    "name": "keyword.operator.assignment.encantis",
                    "match": "="
                },
                {
                    "name": "keyword.operator.bracket.encantis",
                    "match": "\\[|\\]"
                },
                {
                    "name": "keyword.operator.arithmetic.encantis",
                    "match": "/|%|\\*|\\+|-"
                }
            ]
        },
        "keywords": {
            "patterns": [
                {
                    "name": "keyword.control.loop.encantis",
                    "match": "\\b(loop|forever|while|for|in)(?![a-zA-Z0-9_-])"
                },
                {
                    "name": "keyword.control.conditional.encantis",
                    "match": "\\b(if|then|elif|else|when|unless)(?![a-zA-Z0-9_-])"
                },
                {
                    "name": "keyword.control.block.encantis",
                    "match": "\\b(block|do|end)(?![a-zA-Z0-9_-])"
                },
                {
                    "name": "keyword.control.flow.encantis",
                    "match": "\\b(return|br|break|continue)(?![a-zA-Z0-9_-])"
                },
                {
                    "name": "storage.type.encantis",
                    "match": "\\b(func|memory|import|export|define|type|interface|global|local|as)(?![a-zA-Z0-9_-])"
                },
                {
                    "name": "keyword.logic.encantis",
                    "match": "\\b(or|and|not|xor)(?![a-zA-Z0-9_-])"
                }
            ]
        },
        "strings": {
            "patterns": [
                {
                    "name": "string.quoted.single.encantis",
                    "begin": "'",
                    "end": "'"
                },
                {
                    "name": "string.quoted.double.encantis",
                    "begin": "\"",
                    "end": "\""
                }
            ]
        },
        "constants": {
            "patterns": [
                {
                    "name": "constant.language.boolean.encantis",
                    "match": "\\b(true|false)(?![a-zA-Z0-9_-])"
                },
                {
                    "name": "constant.numeric.hex.encantis",
                    "match": "0[xX][0-9a-fA-F]+(\\.[0-9a-fA-F]+)?(?![a-zA-Z0-9_-])"
                },
                {
                    "name": "constant.numeric.binary.encantis",
                    "match": "0[bB][0-1]+(\\.[0-1]+)?(?![a-zA-Z0-9_-])"
                },
                {
                    "name": "constant.numeric.octal.encantis",
                    "match": "0[oO][0-7]+(\\.[0-7]+)?(?![a-zA-Z0-9_-])"
                },
                {
                    "name": "constant.numeric.dozenal.encantis",
                    "match": "0[dD][0-9a-bA-B]+(\\.[0-9a-bA-B]+)?(?![a-zA-Z0-9_-])"
                },
                {
                    "name": "constant.numeric.decimal.encantis",
                    "match": "[0-9]+(\\.[0-9]+)?(?![a-zA-Z0-9_-])"
                }
            ]
        },
        "variables": {
            "patterns": [
                {
                    "name": "entity.name.type.encantis",
                    "match": "\\b(u8|i8|u16|i16|u32|i32|u64|i64|f32|f64|bool)(?![a-zA-Z0-9_-])"
                },
                {
                    "name": "support.type.encantis",
                    "match": "\\b([A-Z][0-9A-Za-z_-]*)"
                },
                {
                    "name": "support.function.encantis",
                    "match": "\\b(sqrt|ceil|floor|round)(?![a-zA-Z0-9_-])"
                },
                {
                    "name": "punctuation.accessor.tuple.encantis",
                    "match": "(?<=[a-zA-Z0-9_-])\\.[0-9]+"
                },
                {
                    "name": "punctuation.accessor.property.encantis",
                    "match": "(?<=[a-zA-Z0-9_-])\\.[a-z][0-9A-Za-z_-]*"
                },
                {
                    "name": "punctuation.accessor.pointer.encantis",
                    "match": "(?<=[a-zA-Z0-9_-])\\.\\*"
                },
                {
                    "name": "variable.other.encantis",
                    "match": "\\b[a-z][0-9A-Za-z_-]*"
                }
            ]
        }
    },
    "scopeName": "source.encantis"
}